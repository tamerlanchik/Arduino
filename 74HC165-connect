#include <SPI.h>

enum { REG_LATCH = 8 };


void setup()
{
  /* Включаем UART и SPI */
  Serial.begin(9600);
  SPI.begin();
  /* Включаем защёлку */
  pinMode(REG_LATCH, OUTPUT);
  digitalWrite(REG_LATCH, HIGH);
}


void loop()
{
  static uint8_t last_input_states = 0;

  /* Выставим на защёлке сначала низкий, потом - высокий уровни.
   * Сдвиговый регистр запомнит уровни сигналов на входах и сможет
   * их нам потом отдать бит за битом.
   */
  digitalWrite(REG_LATCH, LOW);
  digitalWrite(REG_LATCH, HIGH);
  /* Читаем запомненные состояния входов. Ноль шлём просто потому,
   * что transfer() одновременно и шлёт, и принимает. Да и вообще,
   * MOSI не подключена (:
   */
  uint8_t states = SPI.transfer(0);

  /* Если состояние любого входа изменилось, расскажем по UART */
  if (states != last_input_states)
  {
    /* Старый добрый XOR даст нам битовую разницу между старым и новым состояниями. */
    uint8_t changed = states ^ last_input_states;
    last_input_states = states; // запоминаем текущие состояния

    for (int i = 0; i < 8; ++i)
    {
      if (changed & 1) // если состояние кнопки изменилось…
      {
        Serial.print("#");
        Serial.print(i); // шлём номер кнопки
        Serial.print(" -> ");
        Serial.println(states & 1); // … и новое состояние
      }

      /* Сдвигаем биты вправо. Теперь первый бит
       * будет указывать состояние следующей кнопки.
       */
      changed >>= 1;
      states >>= 1;
    }
  }
}
//http://robocraft.ru/blog/arduino/520.html

либо

#include <SPI.h>

const byte LATCH = 9;

void setup ()
{
  SPI.begin ();
  Serial.begin (9600);
  Serial.println ("Begin switch test.");
  pinMode (LATCH, OUTPUT);
  digitalWrite (LATCH, HIGH);
}  // end of setup

byte optionSwitch;
byte oldOptionSwitch; // previous state

void loop ()
{
  digitalWrite (LATCH, LOW);    // pulse the parallel load latch
  digitalWrite (LATCH, HIGH);
  optionSwitch = SPI.transfer (0);
  
  byte mask = 1;
  for (int i = 1; i <= 8; i++)
    {
      if ((optionSwitch & mask) != (oldOptionSwitch & mask))
        {
        Serial.print ("Switch ");
        Serial.print (i);
        Serial.print (" now ");
        Serial.println ((optionSwitch & mask) ? "closed" : "open");
        }  // end of bit has changed
      
    mask <<= 1;  
    }  // end of for each bit
  
  oldOptionSwitch = optionSwitch;
  delay (10);   // debounce
}  // end of loop
//https://mysku.ru/blog/aliexpress/43226.html
